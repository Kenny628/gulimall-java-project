/*
 * Created on 2024-05-02 ( 22:23:25 )
 * Generated by Telosys ( https://www.telosys.org/ ) version 3.3.0
 */
package com._yzhheng.persistence.repositories;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;

import com._yzhheng.persistence.entities.OmsOrder;
import com._yzhheng.rest.dto.OmsOrderDTO;

import jakarta.transaction.Transactional;

/**
 * Spring Data JPA repository for entity "OmsOrder" <br>
 * 
 * This repository extends PagingAndSortingRepository interface <br>
 * so it provides by default all the basic CRUD operations : <br>
 * findById, findAll, save, delete, etc <br>
 * with pagination and sorting : <br>
 * findAll(Pageable), findAll(Sort)<br>
 * 
 * This repository can be extended by adding specific "finders" methods<br>
 * To do so, see the "predicates conventions" for "derived query methods" in
 * Spring Data documentation
 * 
 * @author Telosys
 *
 */
public interface OmsOrderRepository extends JpaRepository<OmsOrder, Long> {

	@Query(value = "Select * from oms_order where order_sn=:orderSn", nativeQuery = true)
	OmsOrder getOrderStatus(String orderSn);

	@Query(value = "Select * from oms_order where member_id=:id order by create_time desc", nativeQuery = true)
	List<OmsOrder> getOrderSnByMemberId(Long id);

	@Transactional
	@Modifying
	@Query(value = "UPDATE oms_order SET status=3 where order_sn=:orderSn", nativeQuery = true)
	Void setOrderStatusToPaid(String orderSn);

	// Insert specific finders here

	// List<OmsOrder> findByXxx(String xxx);

	// List<OmsOrder> findByXxxStartingWith(String xxx);

	// List<OmsOrder> findByXxxContaining(String xxx);

	// List<OmsOrder> findByYyy(BigDecimal yyy);

	// List<OmsOrder> findByXxxContainingAndYyy(String xxx, BigDecimal yyy);
}
